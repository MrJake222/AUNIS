buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "${mc_version}-${mod_version}"
group = "mrjake.aunis"
archivesBaseName = "aunis"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    mappings = mappings_version
    // makeObfSourceJar = false

    replaceIn "src/main/java/mrjake/aunis/Aunis.java"
    replace '${version}', mod_version
}

repositories {
    maven {
        name = "CoFH Maven"
        url = "http://maven.covers1624.net"
    }

    maven {
        name = "JEI Maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }

    maven {
        name = "OpenComputers Maven"
        url = "http://maven.cil.li/"
    }
}

dependencies {
    deobfCompile "cofh:RedstoneFlux:${rf_mc_version}-${rf_version}:universal"
    deobfCompile "cofh:CoFHCore:${mc_version}-${cofh_core_version}:universal"

    deobfCompile "mezz.jei:jei_${jei_mc_version}:${jei_version}"
    runtimeOnly "mezz.jei:jei_${mc_version}:${jei_version}"

    deobfCompile "li.cil.oc:OpenComputers:MC1.12.2-1.7.+"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", mod_version
    inputs.property "mcversion", mc_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':mod_version, 'mcversion':mc_version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

runClient {
    workingDir = "run"
}

runServer {
    workingDir = "run-server"
}